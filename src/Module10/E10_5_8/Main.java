package Module10.E10_5_8;

import java.util.HashSet;
import java.util.Set;

public class Main {
    public static final String DIAMONDS = "Diamonds";
    public static final String SPADES = "Spades";
    public static final String CLUBS = "Clubs";
    public static final String HEARTS = "Hearts";

    public static void main(String[] args) {
        Card card1 = new Card(DIAMONDS, "Ace");
        Card card2 = new Card(SPADES, "Ace");
        Card card3 = new Card(CLUBS, "Ace");
        Card card4 = new Card(HEARTS, "Ace");
        Card card5 = new Card(HEARTS, "King");
        Card card6 = new Card(DIAMONDS, "King");
        Card card7 = new Card(SPADES, "King");
        Card card8 = new Card(CLUBS, "King");
        Card card9 = new Card(DIAMONDS, "queen");
        Card card10 = new Card(SPADES, "queen");
        Card card11 = new Card(CLUBS, "queen");
        Card card12 = new Card(HEARTS, "queen");
        Card card13 = new Card(DIAMONDS, "jack");
        Card card14 = new Card(SPADES, "jack");
        Card card15 = new Card(CLUBS, "jack");
        Card card16 = new Card(HEARTS, "jack");
        Card card17 = new Card(DIAMONDS, "10");
        Card card18 = new Card(SPADES, "10");
        Card card19 = new Card(CLUBS, "10");
        Card card20 = new Card(HEARTS, "10");
        Card card21 = new Card(DIAMONDS, "9");
        Card card22 = new Card(SPADES, "9");
        Card card23 = new Card(CLUBS, "9");
        Card card24 = new Card(HEARTS, "9");
        Card card25 = new Card(DIAMONDS, "8");
        Card card26 = new Card(SPADES, "8");
        Card card27 = new Card(CLUBS, "8");
        Card card28 = new Card(HEARTS, "8");
        Card card29 = new Card(DIAMONDS, "7");
        Card card30 = new Card(SPADES, "7");
        Card card31 = new Card(CLUBS, "7");
        Card card32 = new Card(HEARTS, "7");
        Card card33 = new Card(DIAMONDS, "6");
        Card card34 = new Card(SPADES, "6");
        Card card35 = new Card(CLUBS, "6");
        Card card36 = new Card(HEARTS, "6");
        Card card37 = new Card(DIAMONDS, "Ace");
        Card card38 = new Card(SPADES, "Ace");
        Card card39 = new Card(CLUBS, "Ace");
        Card card40 = new Card(HEARTS, "Ace");
        Card card41 = new Card(HEARTS, "King");
        Card card42 = new Card(DIAMONDS, "King");
        Card card43 = new Card(SPADES, "King");
        Card card44 = new Card(CLUBS, "King");
        Card card45 = new Card(DIAMONDS, "queen");
        Card card46 = new Card(SPADES, "queen");
        Card card47 = new Card(CLUBS, "queen");
        Card card48 = new Card(HEARTS, "queen");
        Card card49 = new Card(DIAMONDS, "jack");
        Card card50 = new Card(SPADES, "jack");
        Card card51 = new Card(CLUBS, "jack");
        Card card52 = new Card(HEARTS, "jack");
        Card card53 = new Card(DIAMONDS, "10");
        Card card54 = new Card(SPADES, "10");
        Card card55 = new Card(CLUBS, "10");
        Card card56 = new Card(HEARTS, "10");
        Card card57 = new Card(DIAMONDS, "9");
        Card card58 = new Card(SPADES, "9");
        Card card59 = new Card(CLUBS, "9");
        Card card60 = new Card(HEARTS, "9");
        Card card61 = new Card(DIAMONDS, "8");
        Card card62 = new Card(SPADES, "8");
        Card card63 = new Card(CLUBS, "8");
        Card card64 = new Card(HEARTS, "8");
        Card card65 = new Card(DIAMONDS, "7");
        Card card66 = new Card(SPADES, "7");
        Card card67 = new Card(CLUBS, "7");
        Card card68 = new Card(HEARTS, "7");
        Card card69 = new Card(DIAMONDS, "6");
        Card card70 = new Card(SPADES, "6");
        Card card71 = new Card(CLUBS, "6");
        Card card72 = new Card(HEARTS, "6");

        Set<Card> setCard = new HashSet<>();

        setCard.add(card1);
        setCard.add(card2);
        setCard.add(card3);
        setCard.add(card4);
        setCard.add(card5);
        setCard.add(card6);
        setCard.add(card7);
        setCard.add(card8);
        setCard.add(card9);
        setCard.add(card10);
        setCard.add(card11);
        setCard.add(card12);
        setCard.add(card13);
        setCard.add(card14);
        setCard.add(card15);
        setCard.add(card16);
        setCard.add(card17);
        setCard.add(card18);
        setCard.add(card19);
        setCard.add(card20);
        setCard.add(card21);
        setCard.add(card22);
        setCard.add(card23);
        setCard.add(card24);
        setCard.add(card25);
        setCard.add(card26);
        setCard.add(card27);
        setCard.add(card28);
        setCard.add(card29);
        setCard.add(card30);
        setCard.add(card31);
        setCard.add(card32);
        setCard.add(card33);
        setCard.add(card34);
        setCard.add(card35);
        setCard.add(card36);
        setCard.add(card37);
        setCard.add(card38);
        setCard.add(card39);
        setCard.add(card40);
        setCard.add(card41);
        setCard.add(card42);
        setCard.add(card43);
        setCard.add(card44);
        setCard.add(card45);
        setCard.add(card46);
        setCard.add(card47);
        setCard.add(card48);
        setCard.add(card49);
        setCard.add(card50);
        setCard.add(card51);
        setCard.add(card52);
        setCard.add(card53);
        setCard.add(card54);
        setCard.add(card55);
        setCard.add(card56);
        setCard.add(card57);
        setCard.add(card58);
        setCard.add(card59);
        setCard.add(card60);
        setCard.add(card61);
        setCard.add(card62);
        setCard.add(card63);
        setCard.add(card64);
        setCard.add(card65);
        setCard.add(card66);
        setCard.add(card67);
        setCard.add(card68);
        setCard.add(card69);
        setCard.add(card70);
        setCard.add(card71);
        setCard.add(card72);
        for (Card p : setCard) {
            System.out.println(p);
        }
        System.out.println(setCard.size());
    }

}
